/**
 * MarketPay API
 * API for Smart Contracts and Payments
 *
 * OpenAPI spec version: v2.01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export interface UniversalPayPayInsResponse {
    /**
     * Information about the funds that are being debited
     */
    debitedFunds?: models.Money;

    /**
     * Details about the funds that are being credited (DebitedFunds â€“ Fees = CreditedFunds)
     */
    creditedFunds?: models.Money;

    /**
     * Information about the fees that were taken by the client for this transaction (and were hence transferred to the Client's platform wallet)
     */
    fees?: models.Money;

    /**
     * The ID of the wallet where money will be credited
     */
    creditedWalletId?: string;

    /**
     * The nature of the transaction
     */
    nature?: UniversalPayPayInsResponse.NatureEnum;

    /**
     * The status of the transaction
     */
    status?: UniversalPayPayInsResponse.StatusEnum;

    /**
     * When the transaction happened
     */
    executionDate?: number;

    /**
     * The result code
     */
    resultCode?: string;

    /**
     * A verbal explanation of the ResultCode
     */
    resultMessage?: string;

    /**
     * The type of the transaction
     */
    type?: UniversalPayPayInsResponse.TypeEnum;

    /**
     * The type of payin
     */
    paymentType?: UniversalPayPayInsResponse.PaymentTypeEnum;

    /**
     * The type of execution for the payin
     */
    executionType?: UniversalPayPayInsResponse.ExecutionTypeEnum;

    /**
     * A custom description to appear on the user's bank statement. It can be up to 10 characters long, and can only include alphanumeric characters or spaces
     */
    statementDescriptor?: string;

    /**
     * A user's ID
     */
    authorId?: string;

    /**
     * The user ID who was credited
     */
    creditedUserId?: string;

    id?: string;

    tag?: string;

    creationDate?: Date;

    provider?: models.PaymentUniversalPayData;

    cardId?: string;

}
export namespace UniversalPayPayInsResponse {
    export enum NatureEnum {
        REGULAR = <any> 'REGULAR',
        REFUND = <any> 'REFUND',
        REPUDIATION = <any> 'REPUDIATION',
        SETTLEMENT = <any> 'SETTLEMENT'
    }
    export enum StatusEnum {
        CREATED = <any> 'CREATED',
        SUCCEEDED = <any> 'SUCCEEDED',
        FAILED = <any> 'FAILED'
    }
    export enum TypeEnum {
        PAYIN = <any> 'PAYIN',
        PAYOUT = <any> 'PAYOUT',
        TRANSFER = <any> 'TRANSFER'
    }
    export enum PaymentTypeEnum {
        NotSpecified = <any> 'NotSpecified',
        CARD = <any> 'CARD',
        BANKWIRE = <any> 'BANK_WIRE',
        DIRECTDEBIT = <any> 'DIRECT_DEBIT',
        PREAUTHORIZED = <any> 'PREAUTHORIZED'
    }
    export enum ExecutionTypeEnum {
        NotSpecified = <any> 'NotSpecified',
        WEB = <any> 'WEB',
        DIRECT = <any> 'DIRECT'
    }
}
